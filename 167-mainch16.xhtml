<!DOCTYPE html> 
<html lang='da' xmlns='http://www.w3.org/1999/xhtml' xmlns:epub='http://www.idpf.org/2007/ops'> 
<head><title>16 Refleksioner over „Stol ikke, bekræft“</title> 
<meta charset='UTF-8' /> 
<meta name='generator' content='TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)' /> 
<link type='text/css' rel='stylesheet' href='167-main.css' /> 
</head><body>
  <!-- l. 1237 --><div class='crosslinks'><p class='noindent'></p></div>
  <h2 class='chapterHead'><span class='titlemark'>16</span>  <a id='x28-6600016'></a>Refleksioner over „Stol ikke, bekræft“</h2>
         <p class='noindent'><span class='ecti-1200'>„Nu til beviserne,“ sagde kongen, „og derefter
         </span><span class='ecti-1200'>dommen.“</span>
</p> 
<p class='indent'>                                       – Lewis Carroll, <span class='ecti-1200'>Alice i
</span><span class='ecti-1200'>Eventyrland</span>    
</p> 
<p class='noindent'>Bitcoin sigter mod at erstatte eller i det mindste give et
alternativ til konventionel valuta. Konventionel valuta er bundet
til en centraliseret myndighed, uanset om vi taler om lovligt
betalingsmiddel som den amerikanske dollar eller moderne
monopolpenge som Fortnites V-Bucks. I begge eksempler er du
tvunget til at stole på, at den centrale myndighed udsteder,
administrerer og cirkulerer dine penge. Bitcoin løser denne binding,
og det vigtigste problem, Bitcoin løser, er spørgsmålet om
<span class='ecti-1200'>tillid</span>.
        </p> 
<blockquote class='quotation'>
      <p class='indent'>   „Det grundlæggende problem med konventionel valuta
      er al den tillid, der kræves for at få det til at fungere.
      Det, der er brug for, er et elektronisk betalingssystem
      baseret på kryptografiske beviser i stedet for tillid“
      </p> 

                                                        <div class='flushright'>
<p class='indent'>
 – Satoshi
Nakamoto<a epub:type='noteref' href='#fn1x17'><sup class='textsuperscript'>1</sup></a><a id='x28-66001f1'></a></p> 
<section epub:type='footnotes' class='footnotes'> 
<aside class='footnote' epub:type='footnote' id='fn1x17'><p><sup class='textsuperscript'>1 </sup>
<span class='ecrm-1000'>Satoshi Nakamoto, officiel Bitcoin-meddelelse [</span><a href='167-mainli13.xhtml#Xbitcoin-announcement'><span class='ecrm-1000'>52</span></a><span class='ecrm-1000'>] og hvidbog [</span><a href='167-mainli13.xhtml#Xwhitepaper'><span class='ecrm-1000'>49</span></a><span class='ecrm-1000'>]</span></p> 
 </aside>            
</section> 
</div>
      </blockquote>
<p class='indent'>  Bitcoin løser tillidsproblemet ved at være fuldstændig
decentraliseret, uden en central server eller betroede parter. Ikke
engang betroede <span class='ecti-1200'>tredjeparter</span>, men betroede parter, punktum.
Uden central autoritet, er der simpelthen <span class='ecti-1200'>ingen </span>at stole på.
                                                              
                                                              
Innovationen ligger i den fuldstændige decentralisering. Det
er roden til Bitcoins modstandskraft, og grunden til at den
stadig er i live. Decentralisering er også grunden til, at vi
har minedrift, knudepunkter, hardware-tegnebøger, og ja,
blokkæden. Det eneste, du skal „stole på“, er at vores forståelse
af matematik og fysik ikke er helt forkert, og at flertallet af
minedrivere handler ærligt (hvilket de er motiverede til at
gøre).
</p> 
<p class='indent'>  Mens den almindelige verden opererer under antagelsen <span class='ecti-1200'>„stol,
</span><span class='ecti-1200'>men bekræft“</span>, opererer Bitcoin under antagelsen <span class='ecti-1200'>„stol ikke,
</span><span class='ecti-1200'>bekræft.“ </span>Satoshi understregede vigtigheden af at fjerne tillid
tydeligt i både introduktionen og konklusionen af Bitcoins
hvidbog.
        </p> 
<blockquote class='quotation'>
      <p class='indent'>   „Konklusion: Vi har foreslået et system til elektroniske
      transaktioner uden at være afhængig af tillid.“
      </p> 

                                                        <div class='flushright'>
<p class='indent'>
 – Satoshi
Nakamoto<a epub:type='noteref' href='#fn2x17'><sup class='textsuperscript'>2</sup></a><a id='x28-66002f2'></a></p> 
<section epub:type='footnotes' class='footnotes'> 
<aside class='footnote' epub:type='footnote' id='fn2x17'><p><sup class='textsuperscript'>2 </sup><span class='ecrm-1000'>Satoshi Nakamoto, </span><span class='ecti-1000'>Bitcoin: A Peer-to-Peer Electronic Cash System
</span><span class='ecrm-1000'>(hvidbogen om Bitcoin) [</span><a href='167-mainli13.xhtml#Xwhitepaper'><span class='ecrm-1000'>49</span></a><span class='ecrm-1000'>]</span></p> 
 </aside>                                                            
</section> 
</div>
      </blockquote>
<p class='indent'>  Bemærk, at <span class='ecti-1200'>uden at være afhængig af tillid </span>bruges i en meget
specifik sammenhæng her. Vi taler om betroede tredjeparter, dvs.
andre enheder, som du stoler på til at producere, opbevare og
behandle dine penge. Det antages for eksempel, at du kan stole på
din computer.
</p> 
<p class='indent'>  Som Ken Thompson demonstrerede i sin Turing Award-fore-læsning,
er tillid et ekstremt vanskelig koncept i beregningsverdenen. Når
man kører et program, er man nødt til at stole på alle mulige former
for software (og hardware), som i teorien kan ændre det program,
                                                              
                                                              
man forsøger at køre, på en ondsindet måde. Som Thompson
opsummerede i sin <span class='ecti-1200'>Reflections on Trusting Trust</span>: „Moralen er
indlysende. Du kan ikke stole på kode, som du ikke helt selv har
skabt.“ [<a href='167-mainli13.xhtml#Xtrusting-trust'>70</a>]
  </p> 
<figure class='figure'> 

                                                              
                                                              
                                                              
                                                              
<p class='indent'><img width='325' height='325' alt='PIC' src='assets/images/ken-thompson-hack.png' /> <a id='x28-66003r1'></a>
<a id='x28-66004'></a>
</p> 
<figcaption class='caption'><span class='id'>Figur 16.1: </span><span class='content'>Uddrag fra Ken Thompsons artikel ‘Reflections on
            Trusting Trust’
</span></figcaption><!-- tex4ht:label?: x28-66003r16  -->
                                                              
                                                              
  </figure>
<p class='indent'>  Thompson demonstrerede, at selv hvis du har adgang til
kildekoden, kan din kompiler - eller ethvert andet program, der
håndterer programmet eller hardwaren - blive kompromitteret, og
det vil være meget svært at opdage denne bagdør. I praksis findes
der således ikke et virkeligt <span class='ecti-1200'>tillidsløst </span>system. Du ville være nødt til
at skabe al din software <span class='ecti-1200'>og </span>al din hardware (assemblere, kompilere,
linkere osv.) fra bunden uden hjælp fra ekstern software eller
software-understøttet maskineri.
        </p> 
<blockquote class='quotation'>
      <p class='indent'>   „Hvis du ønsker at lave en æbletærte helt fra bunden,
      skal du først opfinde universet.“ </p> 

                                                        <div class='flushright'>
<p class='indent'>
 – Carl
Sagan<a epub:type='noteref' href='#fn3x17'><sup class='textsuperscript'>3</sup></a><a id='x28-66005f3'></a></p> 
<section epub:type='footnotes' class='footnotes'> 
<aside class='footnote' epub:type='footnote' id='fn3x17'><p><sup class='textsuperscript'>3 </sup>
<span class='ecrm-1000'>Carl Sagan, </span><span class='ecti-1000'>Cosmos </span><span class='ecrm-1000'>[</span><a href='167-mainli13.xhtml#Xcosmos'><span class='ecrm-1000'>63</span></a><span class='ecrm-1000'>]</span></p> 
 </aside>                                                                   
</section> 
</div>
      </blockquote>
<p class='indent'>  Et <span class='ecti-1200'>Ken Thompson hack </span>er en særlig genial bagdør der er svær at
opdage, så lad os tage et hurtigt kig på en bagdør, der svær at
opdage, som fungerer uden ændringer i softwaren. Forskere har
fundet en metode til at kompromittere sikkerhedskritisk hardware
på ved at ændre polariteten af urenheder i silicium. [<a href='167-mainli13.xhtml#Xbecker2013stealthy'>9</a>] Bare ved at
ændre de fysiske egenskaber af det materiale, som computerchips er
lavet af, var de i stand til at kompromittere en kryptografisk sikker
tilfældig talgenerator. Da denne ændring ikke er synlig, kan en
sådan bagdør ikke opdages ved optisk inspektion, som er en af
de vigtigste mekanismer til afsløring af manipulation med
chips.</p> 
<figure class='figure'> 

                                                              
                                                              
                                                              
                                                              
<p class='indent'><img width='325' height='325' alt='PIC' src='assets/images/stealthy-hardware-trojan.png' /> <a id='x28-66006r2'></a>
<a id='x28-66007'></a>
</p> 
<figcaption class='caption'><span class='id'>Figur 16.2: </span><span class='content'>Fra  <span class='ecti-1200'>Stealthy  Dopant-Level  Hardware  Trojans  </span>af
            Becker, Regazzoni, Paar, Burleson
</span></figcaption><!-- tex4ht:label?: x28-66006r16  -->
                                                              
                                                              
  </figure>
<p class='indent'>  Lyder det skræmmende? Tja, selv hvis du kunne bygge alt fra
bunden, ville du stadig være nødt til at stole på den underliggende
matematik. Du ville være nødt til at stole på, at <span class='ecti-1200'>secp256k1 </span>er en
elliptisk kurve uden bagdøre. Ja, ondsindede bagdøre kan indsættes i
kryptografiske funktioners matematiske fundament, og det er uden
tvivl allerede sket mindst én gang. [<a href='167-mainli13.xhtml#Xwiki:Dual_EC_DRBG'>80</a>] Der er gode grunde til at
være paranoid, og faktum er, at alt lige fra din hardware til din
software, herunder de elliptiske kurver, der bruges, kan have
bagdøre [<a href='167-mainli13.xhtml#Xwiki:backdoors'>82</a>] er nogle af dem.
        </p> 
<blockquote class='quotation'>
      <p class='indent'>   „Stol ikke. Bekræft.“ </p> 

                                                        <div class='flushright'>
<p class='indent'>
 – Bitcoinere overalt</p> 
</div>
      </blockquote>
<p class='indent'>  Ovenstående eksempler burde illustrere, at <span class='ecti-1200'>tillidsløs </span>databehandling
er utopisk. Bitcoin er nok det system, der kommer tættest på denne
utopi, men det er stadig <span class='ecti-1200'>tillidsminimeret </span>- med det formål at fjerne
tillid, hvor det er muligt. Man kan sige, at tillidskæden er uendelig,
da du også bliver nødt til at stole på, at beregning kræver
energi, at P ikke er lig med NP, og at du faktisk befinder dig i
virkeligheden og ikke er fanget i en simulation af ondsindede
aktører.
</p> 
<p class='indent'>  Udviklere arbejder på værktøjer og procedurer for at minimere den
resterende tillid yderligere. For eksempel har Bitcoin-udviklere skabt
Gitian<a epub:type='noteref' href='#fn4x17'><sup class='textsuperscript'>4</sup></a><a id='x28-66008f4'></a>,
som er en softwaredistributionsmetode til at skabe deterministiske
builds. Ideen er, at hvis flere udviklere er i stand til at reproducere
identiske binære filer, reduceres risikoen for ondsindet manipulation.
Fancy bagdøre er ikke den eneste angrebsvektor. Simpel afpresning
                                                              
                                                              
eller pengeafpresning er også reelle trusler. Som i hovedprotokollen,
bruges decentralisering til at minimere tilliden.
  Der gøres forskellige forsøg på at forbedre det kendte
„hønen-eller-ægget“ opstartsproblem, som Ken Thompsons
hack så glimrende påpegede [<a href='167-mainli13.xhtml#Xweb:bootstrapping'>20</a>]. En sådan indsats er
Guix<a epub:type='noteref' href='#fn5x17'><sup class='textsuperscript'>5</sup></a><a id='x28-66009f5'></a>
(udtalt <span class='ecti-1200'>geeks</span>), som bruger funktionelt erklæret pakkehåndtering,
hvilket fører til builds der er reproducerbare bit-for-bit. Resultatet
er, at du ikke længere behøver at stole på nogen softwareleverende
servere, da du kan bekræfte, at den serverede binære fil ikke er
blevet manipuleret ved at genopbygge den fra bunden. For nylig
blev en anmodning godkendt til at integrere Guix i Bitcoins
byggeproces.<a epub:type='noteref' href='#fn6x17'><sup class='textsuperscript'>6</sup></a><a id='x28-66010f6'></a>
  </p> 
<section epub:type='footnotes' class='footnotes'> 
   <aside class='footnote' epub:type='footnote' id='fn4x17'><p><sup class='textsuperscript'>4 </sup><a class='url' href='https://gitian.org/'>https://gitian.org/</a></p> 
 </aside> 
<aside class='footnote' epub:type='footnote' id='fn5x17'><p><sup class='textsuperscript'>5 </sup><a class='url' href='https://guix.gnu.org'>https://guix.gnu.org</a></p> 
 </aside> 
<aside class='footnote' epub:type='footnote' id='fn6x17'><p><sup class='textsuperscript'>6 </sup><span class='ecrm-1000'>Se Pull Request 15277 af </span><span class='ectt-1000'>bitcoin-core</span><span class='ecrm-1000'>: </span><br class='newline' /><a class='url' href='https://github.com/bitcoin/bitcoin/pull/15277'><span class='ectt-1000'>https://github.com/bitcoin/bitcoin/pull/15277</span></a></p> 
 </aside>                 
</section> 
<figure class='figure'> 

                                                              
                                                              
                                                              
                                                              
<p class='indent'><img width='325' height='325' alt='PIC' src='assets/images/guix-bootstrap-dependencies.png' /> <a id='x28-66011r3'></a>
<a id='x28-66012'></a>
</p> 
<figcaption class='caption'><span class='id'>Figur 16.3: </span><span class='content'>Hvad kom først, hønen eller ægget?
</span></figcaption><!-- tex4ht:label?: x28-66011r16  -->
                                                              
                                                              
  </figure>
<p class='indent'>  Heldigvis er Bitcoin ikke afhængig af en enkelt algoritme
eller et enkelt stykke hardware. En effekt af Bitcoins radikale
decentralisering er en distribueret sikkerhedsmodel. Selvom man ikke
skal tage let på de bagdøre, der er beskrevet ovenfor, er det
usandsynligt, at alle software-tegnebøger, alle hardware-tegnebøger,
alle kryptografiske biblioteker, alle knudepunkts-implementeringer
og alle kompilere i alle sprog er kompromitterede. Det er muligt,
men meget usandsynligt.
</p> 
<p class='indent'>  Bemærk, at du kan generere en privat nøgle, uden at være
afhængig af computerhardware eller -software. Du kan slå plat
eller krone [<a href='167-mainli13.xhtml#Xantonopoulos2014mastering'>4</a>] et par gange, men afhængigt af din mønt og
kastestil, er denne kilde til tilfældighed måske ikke tilstrækkeligt
tilfældig. Der er en grund til, at lagringsprotokoller som
Glacier<a epub:type='noteref' href='#fn7x17'><sup class='textsuperscript'>7</sup></a><a id='x28-66013f7'></a>
råder dig til at bruge terninger af kasinokvalitet som en af to kilder
til entropi.
  Bitcoin tvang mig til at reflektere over, hvad det egentlig
indebærer at stole på nogen. Det øgede min bevidsthed om
opstartsproblemet og den implicitte tillidskæde i udvikling og drift
af software. Det gjorde mig også opmærksom på de mange måder,
hvorpå software og hardware kan blive kompromitteret.
  <a id='paragraph*.48'></a></p> 
<section epub:type='footnotes' class='footnotes'> 
   <aside class='footnote' epub:type='footnote' id='fn7x17'><p><sup class='textsuperscript'>7 </sup><a class='url' href='https://glacierprotocol.org/'><span class='ectt-1000'>https://glacierprotocol.org/</span></a></p> 
 </aside>                                 
</section> 

<p class='noindent'><span class='paragraphHead'><a id='x28-6700016'></a><span class='ecbx-1200'>Bitcoin har lært mig, at jeg ikke skal stole, men bekræfte.</span></span>
                                                              
                                                              
  </p> 
<!-- l. 1317 --><div class='crosslinks'><p class='noindent'></p></div>
   
</body> 
</html>